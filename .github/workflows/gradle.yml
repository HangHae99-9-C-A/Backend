
name: CI-CD FOR GITHUB ACTION

on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: make application-cicd.properties
      if: contains(github.ref, 'master')
      run: |
          echo "ls -a . & pwd"
          pwd
          ls -a .
          echo "mkdir & touch"
          mkdir -p ./src/main/resources 
          cd ./src/main/resources
          touch ./application-cicd.properties
          pwd
          ls -a .
          echo "copy properties"
          echo $jasypt_encryptor_password  >> ./application-cicd.properties
          echo $slack_webhook_uri >> ./application-cicd.properties
          cat application-cicd.properties
          
      env:
          slack_webhook_uri : ${{ secrets.SLACK_WEBHOOK_URI }}
          jasypt_encryptor_password : ${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}
    - name: Build with Gradle
      env:
       jasypt.encryptor.password: ${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}
      run: ./gradlew clean build
    - name: Make Directory for deliver
      run: mkdir deploy
    - name: Copy Jar
      run: cp ./build/libs/*.jar ./deploy/
    - name: Copy appspec
      run: cp appspec.yml ./deploy/
    - name: Copy shell
      run: cp ./scripts/* ./deploy/
    - name: Make zip file
      run: zip -r -qq -j ./springbootcicdtest.zip ./deploy
      
    # S3 Bucket으로 copy
    - name: Deliver to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.CICD_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.CICD_AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 cp \
         --region ap-northeast-2 \
         --acl private \./springbootcicdtest.zip s3://springbootcicdtest/ 

  # Deploy
    - name: Deploy
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.CICD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CICD_AWS_SECRET_ACCESS_KEY }}
      run: |
          aws deploy create-deployment \
          --application-name springboot-cicd \
          --deployment-group-name 99-cicd \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=springbootcicdtest,bundleType=zip,key=springbootcicdtest.zip \
          --region ap-northeast-2

